name: Test Flyway DB2 Migrations

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-migrations:
    runs-on: ubuntu-latest
    
    services:
      db2:
        image: icr.io/db2_community/db2
        env:
          LICENSE: accept
          DB2INST1_PASSWORD: password123
          DBNAME: testdb
        ports:
          - 50000:50000
        options: >-
          --health-cmd "su - db2inst1 -c 'db2 connect to testdb'"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 10
          --privileged=true

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Wait for DB2 to be ready
      run: |
        echo "Waiting for DB2 to be fully initialized..."
        for i in {1..30}; do
          if docker exec $(docker ps -q -f ancestor=icr.io/db2_community/db2) su - db2inst1 -c "db2 connect to testdb" 2>/dev/null; then
            echo "DB2 is ready!"
            break
          fi
          echo "Waiting for DB2... (attempt $i/30)"
          sleep 10
        done
    
    - name: Create schema
      run: |
        docker exec $(docker ps -q -f ancestor=icr.io/db2_community/db2) su - db2inst1 -c "
          db2 connect to testdb &&
          db2 'CREATE SCHEMA FLYWAY' || echo 'Schema might already exist' &&
          db2 terminate
        "
    
    - name: Download and setup Flyway
      run: |
        wget -qO- https://download.red-gate.com/maven/release/com/redgate/flyway/flyway-commandline/10.22.1/flyway-commandline-10.22.1-linux-x64.tar.gz | tar xz -C $HOME
        mv $HOME/flyway-* $HOME/flyway
        echo "$HOME/flyway" >> $GITHUB_PATH
    
    - name: Download DB2 JDBC Driver
      run: |
        mkdir -p drivers
        wget -q https://repo1.maven.org/maven2/com/ibm/db2/jcc/11.5.9.0/jcc-11.5.9.0.jar -O drivers/db2jcc.jar
    
    - name: Run Flyway Info
      run: |
        flyway -url=jdbc:db2://localhost:50000/testdb \
               -user=db2inst1 \
               -password=password123 \
               -schemas=FLYWAY \
               -locations=filesystem:./migrations \
               -jarDirs=drivers \
               info
    
    - name: Run Flyway Migrate
      run: |
        flyway -url=jdbc:db2://localhost:50000/testdb \
               -user=db2inst1 \
               -password=password123 \
               -schemas=FLYWAY \
               -locations=filesystem:./migrations \
               -jarDirs=drivers \
               migrate
    
    - name: Validate Migration
      run: |
        flyway -url=jdbc:db2://localhost:50000/testdb \
               -user=db2inst1 \
               -password=password123 \
               -schemas=FLYWAY \
               -locations=filesystem:./migrations \
               -jarDirs=drivers \
               validate
    
    - name: Check migrated tables
      run: |
        docker exec $(docker ps -q -f ancestor=icr.io/db2_community/db2) su - db2inst1 -c "
          db2 connect to testdb &&
          db2 'SELECT * FROM FLYWAY.flyway_schema_history' &&
          db2 'LIST TABLES FOR SCHEMA FLYWAY' &&
          db2 terminate
        "